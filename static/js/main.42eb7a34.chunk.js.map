{"version":3,"sources":["components/Controls/Controls.module.css","components/Publication/Publication.module.css","components/Counter/Counter.module.css","components/Reader/Reader.module.css","components/Publication/Publication.js","components/Counter/Counter.js","components/Controls/Controls.js","components/Reader/Reader.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","Publication","article","className","css","publication","title","text","Counter","index","len","counter","Controls","handleBack","handleForward","setButton","action","label","disabled","onClick","e","type","button","controls","Reader","state","articles","props","items","length","history","currentIndex","setState","prevState","push","pathname","search","this","location","searchNumStr","queryString","parse","item","searchNum","Number","searchIndex","reader","Component","defaultProps","App","path","render","publications","to","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.42eb7a34.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"Controls_controls__NxaSx\",\"button\":\"Controls_button__J75Cv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"publication\":\"Publication_publication__2mBF_\",\"link\":\"Publication_link__2uubx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"counter\":\"Counter_counter__3Z7Ut\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reader\":\"Reader_reader__26vn6\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport css from \"./Publication.module.css\";\n\nconst Publication = ({ article }) => {\n    return (\n        <article className={css.publication}>\n            <h2>{article.title}</h2>\n            <p>{article.text}</p>\n        </article>\n    );\n};\n\nPublication.propTypes = {\n    article: PropTypes.object.isRequired\n};\n\nexport default Publication;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport css from './Counter.module.css';\n\nconst Counter = ({ index, len }) => (\n  <p className={css.counter}>\n    {index + 1}/{len}\n  </p>\n);\n\nCounter.propTypes = {\n  index: PropTypes.number.isRequired,\n  len: PropTypes.number.isRequired,\n};\n\nexport default Counter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport css from './Controls.module.css';\n\nconst Controls = ({ index, len, handleBack, handleForward }) => {\n\n  const setButton = (action, label, disabled) => (\n      <button\n          onClick={e => action(e)}\n          type=\"button\"\n          className={css.button}\n          disabled={disabled}\n        >\n          {label}\n        </button>\n    );\n  \n  return (\n    <section className={css.controls}>\n      {index === 0 ? setButton(handleBack, \"Назад\", true) : setButton(handleBack, \"Назад\", false)}\n      {index === len - 1 ? setButton(handleForward, \"Вперед\", true) : setButton(handleForward, \"Вперед\", false)}\n    </section>\n  );\n};\n\nControls.propTypes = {\n  index: PropTypes.number.isRequired,\n  len: PropTypes.number.isRequired,\n  handleBack: PropTypes.func.isRequired,\n  handleForward: PropTypes.func.isRequired,\n};\n\nexport default Controls;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Publication from \"../Publication\";\nimport Counter from \"../Counter\";\nimport Controls from \"../Controls\";\nimport css from \"./Reader.module.css\";\nimport queryString from \"query-string\";\n\nclass Reader extends Component {\n    state = {\n        articles: [...this.props.items],\n        index: 0\n    };\n\n    componentDidMount() {\n        const { history } = this.props;\n        history.push({\n            pathname: \"/reader\",\n            search: \"?item=1\"\n        });\n    }\n\n    handleBack = e => {\n        const { articles, index } = this.state;\n        const len = articles.length;\n\n        if (!len) return;\n\n        const { history } = this.props;\n\n        if (index > 0) {\n            const currentIndex = index - 1;\n            this.setState(prevState => ({ index: prevState.index - 1 }));\n            history.push({\n                pathname: \"/reader\",\n                search: `?item=${currentIndex + 1}`\n            });\n        }\n    };\n\n    handleForward = e => {\n        const { articles, index } = this.state;\n        const len = articles.length;\n\n        if (!len) return;\n\n        const { history } = this.props;\n\n        if (index < len - 1) {\n            const currentIndex = index + 1;\n            this.setState(prevState => ({ index: prevState.index + 1 }));\n            history.push({\n                pathname: \"/reader\",\n                search: `?item=${currentIndex + 1}`\n            });\n        }\n    };\n\n    render() {\n        const { index, articles } = this.state;\n\n        const { location } = this.props;\n        //console.log(location);\n        const searchNumStr = queryString.parse(location.search).item;\n\n        let searchNum = Number(searchNumStr);\n\n        if (!searchNum) searchNum = 1;\n\n        const searchIndex = searchNum - 1;\n        //console.log(searchIndex);\n\n        return (\n            <div className={css.reader}>\n                <Publication {...this.props} article={articles[searchIndex]} />\n                <Counter index={searchIndex} len={articles.length} />\n                <Controls\n                    index={index}\n                    len={articles.length}\n                    handleBack={this.handleBack}\n                    handleForward={this.handleForward}\n                />\n            </div>\n        );\n    }\n}\n\nReader.defaultProps = {\n    items: []\n};\n\nReader.propTypes = {\n    items: PropTypes.array\n};\n\nexport default Reader;\n","import React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport \"./App.css\";\nimport Reader from \"./Reader\";\n\nimport publications from \"./publications.json\";\n\nfunction App(props) {\n    return (\n        <Switch>\n            <Route\n                path=\"/reader\"\n                render={props => <Reader {...props} items={publications} />}\n            ></Route>\n\n            <Redirect to={{ pathname: \"/reader\" }} />\n        </Switch>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}